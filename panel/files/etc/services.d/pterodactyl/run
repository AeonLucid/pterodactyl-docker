#!/usr/bin/with-contenv bash

cd /var/www/pterodactyl || exit

# Fix nginx.
mkdir -p /var/log/nginx
chown abc:abc /var/log/nginx
chown abc:abc /var/log/nginx/error.log

# Create the storage/cache directories
if [ ! -d /data/storage ]; then
    mkdir -p /data/storage
    cat .storage.tmpl | while read line; do
        mkdir -p "/data/${line}"
    done
    chown -R abc:abc /data/storage
fi

if [ ! -d /data/cache ]; then
    mkdir -p /data/cache
    chown -R abc:abc /data/cache
fi

# Refresh symlinks (or files) and recreate them
rm -rf storage
ln -s /data/storage storage

rm -rf bootstrap/cache
ln -s /data/cache bootstrap/cache

rm -rf .env
ln -s /data/pterodactyl.conf .env

# Initial setup
if [ ! -e /data/pterodactyl.conf ]; then
    echo "Running first time setup..."

    # Copy example configuration file.
    cp .env.example /data/pterodactyl.conf
    chmod g+w /data/pterodactyl.conf

    # Refresh symlink.
    rm -rf .env
    ln -s /data/pterodactyl.conf .env

    echo ""
    echo "Generating app key..."
    php artisan key:generate --force --no-interaction
fi

echo ""
echo "Creating & seeding database..."

if php artisan migrate --force; then
    echo "Created database"
else
    echo "Failed to create database, are your MySQL credentials correct?"
    sleep 5
    exit 1
fi

if php artisan db:seed --force; then
    echo "Seeded database"
else
    echo "Failed to seed database.."
    sleep 5
    exit 1
fi

# Create admin user
if [ ! -z "${CREATE_ADMIN}" ] && [ ! -e /data/.admin_lock ]; then
    echo "Running admin user creation..."

    php artisan p:user:make --username admin --password admin --email change@me.org --name-first changeme --name-last changeme <<-EOF
yes
EOF

    touch /data/.admin_lock
fi

echo "Starting Pterodactyl ${VERSION} panel..."

# Run
exec s6-setuidgid abc nginx -g "daemon off;"
